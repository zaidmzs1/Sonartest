name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
    - name: Setup MSBuild (vswhere-path)
      id: setup_msbuild_explicit
      uses: ./
      with:
        vswhere-path: C:\ProgramData\chocolatey\bin

    - name: Setup MSBuild (PATH)
      id: setup_msbuild_path
      uses: ./

    - name: Setup MSBuild (fallback)
      id: setup_msbuild_fallback
      uses: ./
      env:
        PATH: ''

    - name: Setup MSBuild (x64)
      if: always()
      id: setup_msbuild_path_x64
      uses: ./
      with:
        vs-prerelease: true
        msbuild-architecture: 'x64'

    - name: Setup MSBuild (arm64)
      if: always()
      id: setup_msbuild_path_arm
      uses: ./
      with:
        vs-prerelease: true
        msbuild-architecture: 'arm64'

         - name: echo msbuild path
      run: |
        echo "vswhere-path: ${{ steps.setup_msbuild_explicit.outputs.msbuildPath }}"
        echo "PATH: ${{ steps.setup_msbuild_path.outputs.msbuildPath }}"
        echo "ARM PATH: ${{ steps.setup_msbuild_path_arm.outputs.msbuildPath }}"
        echo "ARM PATH: ${{ steps.setup_msbuild_path_x64.outputs.msbuildPath }}"
        echo "Fallback: ${{ steps.setup_msbuild_fallback.outputs.msbuildPath }}"

    - name: echo MSBuild
      run: msbuild -version



      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"zaidmzs1_Sonartest" /o:"zaidmzs1" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
               msbuild TestWebappforSonar.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"